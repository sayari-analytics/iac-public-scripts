name: provision resources

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: false
        type: string
        default: "."
      APPLY_ON_PR:
        required: false
        type: string
        default: 'false'
      DESTROY_ON_MERGE:
        required: false
        type: string
        default: 'false'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DEPLOY_KEY:
        required: false

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ inputs.AWS_REGION }}
  APPLY_ON_PR: ${{ inputs.APPLY_ON_PR }}
  DESTROY_ON_MERGE: ${{ inputs.DESTROY_ON_MERGE }}

jobs:
  deploy-terraform:
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: add-deploy-key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        if: env.DEPLOY_KEY != ''
        run: |
          mkdir ~/.ssh
          echo "${DEPLOY_KEY}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: init
        run: terraform init

      - name: validate
        run: terraform validate -no-color

      - name: plan
        id: plan
        run: terraform plan -out="tfplan"

      - name: apply
        if: env.APPLY_ON_PR == 'true' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve "tfplan"
      
      - name: destroy
        if: env.DESTROY_ON_MERGE == 'true' && github.ref == 'refs/heads/main'
        run: terraform destroy -input=false -auto-approve

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tfplan-${{ github.run_id }}
          path: ${{ github.workspace }}/${{ inputs.working_directory }}/.terraform/
          if-no-files-found: error
          retention-days: 1
